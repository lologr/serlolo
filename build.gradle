buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'lolo'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('io.springfox:springfox-swagger2:2.4.0')
	compile('io.springfox:springfox-swagger-ui:2.4.0')

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.projectlombok:lombok')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile('org.apache.commons:commons-lang3:3.0')

    compile('org.flywaydb:flyway-core:4.0.3')

	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

def dbUrl = 'JDBC_DATABASE_URL'
def dbUser = 'JDBC_DATABASE_USERNAME'
def dbPass = 'JDBC_DATABASE_PASSWORD'

project.ext['flyway.url']=System.getenv(dbUrl)
project.ext['flyway.user']=System.getenv(dbUser)
project.ext['flyway.password']=System.getenv(dbPass)

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
